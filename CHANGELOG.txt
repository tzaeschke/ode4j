TODO for 0.5.0
==============
- Java 8 (or later) / OSGI: "JavaSE;version=1.8"  / https://www.aqute.biz/2020/03/02/osgi-on-android.html
- lwjgl 3.0
- Android compatibility
- libGWT compatibility?
- CI
- Java 9/10/11 ?
- Beautify CHANGELOG -> .md
- Issue #22
- Cleanup GimMath / GimGeometry  (e.g. remove RefFloat)
- Move non-cpp tests out of cpp
- Move to Google Java Code Style

Check:
- Demo -> Test?  E.g. DemoI? DemoSpace(-Stress)? DemoStep? ....
- DemoPlane2D / DemoBasket(-Convex)
- Performance with DemoCards -> "TODO CHECK-TZ" in steppers


ODE2: DemoCard with 18 layers: Very weird, collapses slowly, some cards floating horizontally...
ODE16.2: Much better. Floating card is actually fine (in theory). But3rd row collapses and
 after a while, the outer card stops in a weird place.

0.5.0
=====
- Update to ODE 0.15.1
  - This includes incrrewsed stability, e.g. the DemoCards won't collapse anymore when 30 levels high.
  - WARNING: Still missing: libccd and trimesh collider updates.
- Changed CI build requirements:
  - Removed openjdk7: Not required. source compatibility is still set to 7, but should
    be safe to change to 8 now (Android Nougat is mostly 8 compatible), this covers > 80% users.
  - Changed oraclejdk build to 11

- WARNING!!!!!
  -> lwjgl requires Java 8!!!  Try lwjgl3 (works with Java 11) and see whether it also works with Java 8!

- Issue #22 / ODE issue #36: https://bitbucket.org/odedevs/ode/issues/36/fix-gimpact-contacts-handling
  This has been resolved, We need to remove the workaround in OdeConfig::50
// TODO TZ check
// TODO TZ fix
// TODO CHECK-TZ


Java Version
============
Summary:
- We should aim for Oreo or later (Android 8.0, released 2017, API Level 26: https://apilevels.com/)
- Java 8 should be fine.
- Try animal-sniffer plugin for higher versions, e.g. Java 9


- Android Runtime replaced Dalvik as default Runtime in Android 5: https://en.wikipedia.org/wiki/Android_version_history
- Android 8 (Oreo) is about 8% share:
  - https://apilevels.com/
  - https://www.composables.co/tools/distribution-chart
- https://medium.com/androiddevelopers/support-for-newer-java-language-apis-bca79fc8ef65
  - Support vor never Java features depend on Android Gradle Plugin 4.0.0 -> "Desugaring"
    -> Does that also work with OSGI?
    -> This was release in June 2017 ->
  - Android 11 support "up to" Java 13 (Question: complete 13 or partial 13??)
- 2018: https://jakewharton.com/androids-java-9-10-11-and-12-support/

Oreo was release in August 2017
Gradle 4.0.0 was released April 2020: https://developer.android.com/build/releases/past-releases/agp-4-0-0-release-notes

- Java 8 support: https://developer.android.com/studio/write/java8-support-table
- Java 8 support details: https://developer.android.com/studio/write/java8-support


Compliance checkers:
https://stackoverflow.com/questions/11048805/maven-plugin-for-checking-api-compliance-with-android
  -> TRY THIS!!!!
https://lvc.github.io/japi-compliance-checker/    (up to 2018 / Java 9)
https://simpligility.github.io/android-maven-plugin/index.html  (up to 2019)

0.4.0
=====
- Fixed javadoc to compile without warnings
- Java 9 compatibility automatically detected and used with Maven profiles 
- Changed to Java 9 (output still Java 7) and modularization (io7m)
- Changed to Java 7 and updated some maven dependencies
- Implemented/migrated multi-threading for the stepper (Pjotr)
- SAP-Space optimization: Avoid collision detection for immobile bodies (Pjotr)
- New BVH tree for better scalability with many bodies, ported from the Turbulenz Engine (Pjotr)
- Some fixes, including new random reordering in quickstep, see PR #67, #68 (Pjotr)


0.3.1
=====
- Announcement: This will be the last release build with Java 6! 
- Convex vs trimesh collision improvement for concave trimeshes, PR #51 (Piotr)
- Quickstep improvements, also fixes issue with DemoFeedback, PR #50 (Piotr)
- Added more stable cylinder stacking, PR #47 (Piotr)
- Deprecated DxSpace.getGeom(i) to fix compilation failure (TZ)
- Ported libccd updates, PR #45 (Piotr)
- Added new SAP space, PR #43 (Piotr)
- Fixes on SAP space, PR #42 (Piotr)
- Fixes on removing geoms from space, PR #41 (Piotr)
- Added support for convex-trimesh collision (Piotr)
- Fixed scaling of tacc in quickstep (issue #38, Eduard Nicodei)
- Fixed Common.__ASSERT methods to act correctly if parameter is '0' or 'false', see issue #32
- Removed unnecessary Common.__ASSERT calls if NPE would trivially be thrown by code below, see #32 
- Fixed mode checking in dJointSetTransmissionAxis2(), see issue #33
- Test and fix for issue #31  (NPE in ragdoll)
- Added support for heightfiels with holes (DxTrimeshHeightField)
- Added support for the slf4j loggin API (TZ)
- Added Ragdoll support and ConstrainedBallJoint (Piotr)
- Added sorting of contact by penetration depth (Piotr), see issue #22
- Added TrimeshHeightfield provided by Piotr
- Fixed issue #19 (thanks to Piotr)

- Fixed issue #17
- Fixed NPE in DemoBoxStack-'x'
- Added newArray(size) methods to DVector3 and DMatrix3


0.3.0
=====
Migration to 0.13.1

New:
-- 3 new joints: DoubleBall, DoubleHinge, Transmission
-- New demos: DoubleBall, DoubleHinge, Gyro2, RFriction, Transmission
-- Multithreading (well...)

Done:
-- main code
-- tests 
-- demos
-- Fixed bug in dMatrix3Inv() --> Calculation was incorrect
-- Fixed bug in DObject --> destroying joints might have crashed
-- Fixed bug: Calling destroy() on a space with a Heightfield cause hang. 
-- Removed GeomTransform and other deprecated stuff
-- Java 1.6 again
-- Now passes strict -Xlint:all / -Werror builds

Demos:
- DemoBoxstack has MT disabled.

TODO
-- DemoPlane2 explodes...

Missing:
-- Multithreading does not work
-- Check further:
  -- DxWorldProcessMemArena.FreeMemArena --> Commented out
  -- DxWorldProcessContext.FreeArenasList --> Commented out
  -- ThreadingUtils.java 154-156
-- check matrix.h
-- Skipped: odeou.*, odetls.*


0.2.9
=====
- Fixed possible infinite loop when calling dxQuickStepParameters.clone()
- fixed problem in low level check in Cstdio.fprintf()
- Deprecated equals() methods for DVector3, DVector6 and DQuaternion
- fixed NaN Check in Common.java
- Migration to Java 7!!!!
- Set version to 0.2.9
- Cleaned up javadoc (@remarks/note/warning to <p>REMARKS:/...) and removed @brief/@ingroup/@defgroup
- Updated license dates to 2014.
- CLeaned up plenty of compiler warnings


0.2.8
=====
- Fixed issue #9: Exception when updating large trimeshes


0.2.7
=====
- Merged 'cpp' package into 'core' package
- Issue #3: porting typo in space collider
